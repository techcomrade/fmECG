
services:
  node-app:
    image: thaidmfinnick/fmecg-node-app
    platform: linux/x86_64
    container_name: node-fmecg
    # build: 
    #   dockerfile: Dockerfile
    #   context: ./server-web
    volumes:
      - ./server-web/:/server/
      - /server/node_modules
    depends_on:
      - database
    env_file: ./server-web/.env.docker
    networks:
      - network-fmecg
  
  react-app:
    image: thaidmfinnick/fmecg-react-app
    platform: linux/x86_64
    container_name: react-fmecg
    # build: 
    #   dockerfile: Dockerfile
    #   context: ./frontend_web
    volumes:
      - ./frontend_web:/web/
      - /web/node_modules
    depends_on:
      - database
    networks:
      - network-fmecg

  bin-login:
    image: thaidmfinnick/fmecg-bin-login
    platform: linux/x86_64
    container_name: bin-fmecg
    # build: 
    #   dockerfile: Dockerfile
    #   context: ./frontend_web/bin
    env_file: ./frontend_web/bin/.env.docker
    volumes:
      - ./frontend_web/bin:/bin_login/
      - /bin_login/node_modules
    depends_on:
      - database
      - node-app
    networks:
      - network-fmecg
  
  proxy:
    image: thaidmfinnick/fmecg-proxy
    platform: linux/x86_64
    container_name: proxy-fmecg
    # build:
    #   dockerfile: Dockerfile
    #   context: ./proxy
    links:
      - node-app
      - react-app
      - bin-login
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network-fmecg

  database:
    image: mysql:8.0
    platform: linux/x86_64
    container_name: database-fmecg
    restart: unless-stopped
    ports:
      - 3306:3306
    expose:
      - 3306
    env_file: ./server-web/.env.docker
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
    networks:
      - network-fmecg

networks:
  network-fmecg:
    driver: bridge
